{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","App.module.css","Components/Container/Container.module.css","redux/selectors.js","redux/action.js","Components/ContactForm/ContactForm.js","Components/Container/Container.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","redux/reducer.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","contact","name","includes","getFilterContacts","addContact","createAction","number","payload","id","shortid","generate","deleteContact","changeFilter","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","resetForm","onSubmit","preventDefault","find","alert","contactActions","className","s","form","label","input","type","pattern","title","required","onChange","button","Container","children","container","ContactList","list","map","item","onClick","onDeleteContact","Filter","event","target","App","createReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","storage","store","configureStore","reducer","persistReducer","contactReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.75ab9130.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2SSBU\",\"item\":\"ContactList_item__3VcFU\",\"button\":\"ContactList_button__1m7nG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1jL5p\",\"input\":\"Filter_input__2hy3F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__ln97O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__34be5\"};","export const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = (state) => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n\r\n  const getFilterContacts = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  return getFilterContacts(contacts);\r\n};","import shortid from \"shortid\";\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('contact/add', (name, number) => ({\r\n  payload:{\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    } \r\n}));\r\nexport const deleteContact = createAction('contact/delete');\r\nexport const changeFilter = createAction('contact/changeFilter');\r\n\r\n\r\n\r\n\r\n\r\n//  export default {\r\n// ADD:'contact/add',\r\n// DELETE:'contact/delete',\r\n// CHANGE_FILTER:'contact/changeFilter',\r\n// }\r\n\r\n// const addContact = (name, number) => ({\r\n//   type: types.ADD,\r\n//     payload:{\r\n//       id: shortid.generate(),\r\n//       name,\r\n//       number,\r\n//     } \r\n// })\r\n// const deleteContact = (contactId) => ({\r\n//   type: types.DELETE,\r\n//   payload: contactId,\r\n      \r\n// });\r\n// const changeFilter = value => ({\r\n//   type: types.CHANGE_FILTER,\r\n//   payload: value,\r\n      \r\n// });\r\n// export default { addContact, deleteContact, changeFilter }","import { useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from '../../redux/selectors';\nimport * as contactActions from '../../redux/action';\nimport s from \"./ContactForm.module.css\";\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  \n  const onSubmit = (name, number) =>\n    dispatch(contactActions.addContact(name, number));\n  \n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n      \n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (contacts.find((contact) =>\n      contact.name.toLowerCase() === name.toLowerCase())) {\n      alert(`${name} is already in contacts.`);\n    } \n  \n    onSubmit(name,number)\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n    return (\n      <form onSubmit={handleSubmit} className={s.form}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handleChange}\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n\n\n// ContactForm.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n  \n// };\nexport default ContactForm;\n\n// const mapStateToProps = state => ({\n//   contacts: state.contacts.items,\n// });\n// const mapDispatchToProps = (dispatch) => ({\n//   onSubmit:(name,number)=>dispatch(contactActions.addContact(name, number))\n// })\n\n\n// export default connect(null,mapDispatchToProps)(ContactForm);\n\n","import s from \"./Container.module.css\";\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import shortid from \"shortid\";\nimport { useSelector,useDispatch} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\nimport * as contactActions from '../../redux/action';\nimport { getVisibleContacts } from '../../redux/selectors';\n\nexport default function ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  const onDeleteContact = (id) => dispatch(contactActions.deleteContact(id));\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={shortid.generate()} className={s.item}>\n          {name}: {number}\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={()=>onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\n\n\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\n// const mapStateToProps = ({ contacts: { items, filter } }) => {\n//   return {\n//     contacts: getFilterContacts(items, filter),\n//   };\n// };\n\n// const mapDispatchToProps=(dispatch) => ({\n//   onDeleteContact:id=>dispatch(contactActions.deleteContact(id))\n  \n// })\n\n// export default connect(mapStateToProps,mapDispatchToProps)(ContactList);\n","import { useSelector,useDispatch} from \"react-redux\";\nimport * as contactActions from '../../redux/action';\nimport { getFilter } from '../../redux/selectors';\nimport s from \"./Filter.module.css\";\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n\n    <label className={s.label}>\n      Find contacts by name\n      <input className={s.input} type=\"text\" value={value}\n        onChange={event => dispatch(contactActions.changeFilter(event.target.value))} />\n    </label>\n  );\n}\n\n\n// Filter.propTypes = {\n//   value: PropTypes.string,\n//   onChange: PropTypes.func.isRequired,\n// };\n\n// const mapStateToProps = (state) => ({\n//   value:state.contacts.filter,\n// })\n\n// const mapDispatchToProps=(dispatch) => ({\n//   onChange: e => dispatch(contactActions.changeFilter(e.target.value)\n  \n// })\n\n// export default connect(mapStateToProps,mapDispatchToProps)(Filter);","\nimport ContactForm from \"./Components/ContactForm\";\nimport Container from \"./Components/Container\";\nimport ContactList from \"./Components/ContactList\";\nimport Filter from \"./Components/Filter\";\nimport s from \"./App.module.css\";\n\n\nfunction App() {\n  \n    return (\n      <Container>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm />\n        <h2 className={s.title}>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </Container>\n    );\n  }\n\nexport default App;\n\n","import { combineReducers } from \"redux\";\r\nimport { addContact, deleteContact, changeFilter } from './action';\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst contacts = [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst items = createReducer(contacts, {\r\n    [addContact]: (state, { payload }) => [...state, payload],\r\n    [deleteContact]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n [changeFilter]: (_, { payload }) => payload,    \r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter\r\n})\r\n\r\n// const items = (state = [], { type, payload })=>{\r\n//     switch(type){\r\n//        case types.ADD:\r\n//         return [...state, payload];\r\n\r\n//         case types.DELETE:\r\n//         return state.filter(({id}) =>id !== payload);\r\n        \r\n//         default:\r\n//         return state;\r\n//     }\r\n// }\r\n// const filter = (state = '', {type,payload})=>{\r\n//     switch(type){\r\n//         case types.CHANGE_FILTER:\r\n//             return payload;\r\n\r\n//         default:\r\n//         return state;\r\n//     }\r\n// }\r\n","// import { combineReducers } from \"redux\";\r\nimport { configureStore,getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n    persistStore, persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\n\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nimport contactReducer from './reducer';\r\n\r\n// LocalStorage\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n}\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: persistReducer(persistConfig, contactReducer)\r\n    },\r\n     middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default {store,persistor};\r\n\r\n// const rootReducer = combineReducers({\r\n//     contacts: contactReducer,\r\n// });","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { PersistGate } from 'redux-persist/integration/react';\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from './redux/store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n    <App />\n     </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__YfRAB\",\"label\":\"ContactForm_label__PEI7n\",\"input\":\"ContactForm_input__2rJMw\",\"button\":\"ContactForm_button__3qqIS\"};"],"sourceRoot":""}